{"version":3,"sources":["components/Country/Country.js","axios.js","data/actions/state.js","data/reducer.js","data/initial.js","store.js","data/actions/api.js","components/Country/index.js","components/List.js","components/About.js","components/Footer.js","components/Header/index.js","components/Header/Header.js","components/Map.js","components/Login/Login.js","components/Login/index.js","components/Favourites/Favourites.js","components/Favourites/index.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Country","Component","constructor","props","context","super","this","wrapperRef","React","createRef","setWrapperRef","bind","handleClickOutside","escFunction","handleLike","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","node","event","selected","contains","target","handleBack","keyCode","checkFavourites","faves","found","i","length","name","country","loggedIn","dispatchLike","setTimeout","dispatchFavourites","render","dish","description","photo","recipe","handlePhotoSource","favourites","createElement","CSSTransition","classNames","transitionappeartimeout","timeout","in","unmountOnExit","appear","exit","className","id","ref","onClick","href","rel","src","alt","concat","withRouter","axios","create","baseURL","headers","Accept","logReg","_ref","token","type","favouriteCountries","data","reducer","state","action","loggedOut","liked","_ref2","arr","map","initial","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistState","interceptors","request","use","config","getState","Authorization","dispatch","get","then","_ref7","connect","post","countries","_ref6","like","List","list","handleListView","geoUrl","objects","ne_50m_admin_0_countries","geometries","handleEnter","sort","a","b","properties","NAME","geo","COUNTRY","key","ISO_A3","DISH","DESCRIPTION","PHOTO","RECIPE","About","listLink","loginLink","about","handleAboutView","handleLoginView","Footer","handleFavouritesView","useRef","dropped","setDrop","useState","clicked","setClicked","click","useHeader","useEffect","current","handleClick","favouritesViewApi","Map","setTooltipContent","ComposableMap","width","style","data-tip","projectionConfig","scale","ZoomableGroup","translateExtent","Geographies","geography","geographies","Geography","rsmKey","onMouseOver","onMouseOut","fill","stroke","strokeWidth","default","outline","hover","pressed","Login","reg","register","email","pass","conf","log","login","handleRegName","handleRegEmail","handleRegPass","handleRegConf","handleLogEmail","handleLogPass","handleLoginApi","handleRegisterApi","handleLogout","currentReg","currentLog","setState","e","registerCopy","JSON","parse","stringify","currentTarget","value","loginCopy","preventDefault","dispatchReg","handleLogin","dispatchLog","dispatchLogout","Fragment","onSubmit","onChange","required","password","password_confirmation","_ref3","_ref4","_ref5","logout","Favourites","history","push","Home","PersistentComponent","URL","hostname","cssTrans","transitionAppearTimeout","Header","memo","App","content","setContent","Router","ReactTooltip","Boolean","location","match","ReactDOM","Provider","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.458055bb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nclass Country extends Component {\n    constructor(props, context) {\n        super(props, context);\n        \n        this.wrapperRef = React.createRef();\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.escFunction = this.escFunction.bind(this);\n        this.handleLike = this.handleLike.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n      }\n    \n    handleClickOutside(event) {\n        if (this.props.selected && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.props.handleBack();\n        }\n    }\n\n    escFunction(event){\n        if(this.props.selected && event.keyCode === 27) {\n            this.props.handleBack();\n        }\n    }\n\n    checkFavourites(faves){\n        let found = false;\n        for(let i = 0; i < faves.length; i +=1){\n            if (faves[i].name === this.props.country){\n                found = true;\n                break;\n            }\n        }\n        return found;\n    }\n\n    handleLike(){\n        if(this.props.loggedIn){\n            this.props.dispatchLike(this.props.country);\n            setTimeout(() => {this.props.dispatchFavourites()}, 500);\n        }\n    }\n\n    render(){\n        const { country, dish, description, photo, recipe, handleBack, handlePhotoSource, selected, favourites, loggedIn } = this.props;\n\n        return (\n            <CSSTransition\n                classNames=\"transition\"\n                transitionappeartimeout={500}\n                timeout={500}\n                in={ selected }\n                unmountOnExit\n                appear\n                exit\n            >   \n                <div className=\"overlay\" id=\"country\">\n                    <div className=\"wrapper\" ref={this.setWrapperRef}>\n                    {\n                    country && !dish ? \n                        <article className=\"country noData\">\n                            <header className=\"countryHeader\">\n                                <div className=\"countryTitles\">\n                                    <h1 className=\"heading\">{ country }</h1>\n                                    <h2 className=\"subHeading\">It's a mystery to me...</h2>\n                                </div>\n                                <span className=\"close\" onClick={ handleBack }></span>\n                            </header>\n                            <section className=\"countryBody\">\n                                <p className=\"text description\">There's currently no data on this place! If you have any suggestions, <span><a className=\"link\" href=\"mailto:oscarjwales@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">please get in touch</a></span>!</p>\n                            </section>\n                        </article>\n                    : !country ?\n                        <article className=\"country noData\">\n                            <header className=\"countryHeader\">\n                                <div className=\"countryTitles\">\n                                    <h2 className=\"subHeading\">Something went wrong :(</h2>\n                                </div>\n                                <span className=\"close\" onClick={ handleBack }></span>\n                            </header>\n                        </article>\n                    :\n                        <article className=\"country\">\n                            <header className=\"countryHeader\">\n                                { loggedIn ?\n                                    this.checkFavourites(favourites) ?\n                                        <span className=\"heartOrange\" onClick={this.handleLike}></span>\n                                    :    \n                                        <span className=\"heart\" onClick={this.handleLike}></span>\n                                    :\n                                        null\n                                }\n                                <span className=\"close\" onClick={ handleBack }></span>\n                                <div className=\"countryTitles\">\n                                    <h1 className=\"heading\">{ country }</h1>\n                                    <h2 className=\"subHeading\">{ dish }</h2>\n                                </div>\n                            </header>\n                            <section className=\"countryBody\">\n                                <figure className=\"photoContainer\">\n                                    <img className=\"photo\" src={ photo } alt={ `${ dish }, the national dish of ${ country }` } />\n                                    <figcaption className=\"caption\">Photo courtesy of { handlePhotoSource(photo) }</figcaption>\n                                </figure>\n                                <div className=\"description\">\n                                    <p className=\"text\">{ description }</p>\n                                    <a className=\"link underline\" href={ recipe }>Learn to cook it here!</a>\n                                </div>\n                            </section>\n                        </article>\n                    }\n                    </div>\n                </div>\n            </CSSTransition>\n        );\n    };\n};\n\nexport default withRouter(Country);","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://food-atlas.laikathespacedog.co.uk/api\",\n    headers: {\n        Accept: \"application/json\"\n    }\n});","export const logReg = ({token}) => {\n    return {\n        type: \"logReg\",\n        token: token\n    }\n}\n\nexport const loggedOut = () => {\n    return {\n        type: \"loggedOut\"\n    }\n}\n\nexport const liked = () => {\n    return {\n        type: \"liked\"\n    }\n}\n\nexport const favouriteCountries = (data) => {\n    return {\n        type: \"favourites\",\n        data: data\n    }\n}","const removeLayer = (arr) => {\n    let newArr = arr.data.map(country => country);\n    return newArr;\n}\n\nconst loggedIn = (state, { token }) => ({\n    ...state,\n    loggedIn: true,\n    token: token\n});\n\nconst loggedOut = (state) => ({\n    ...state,\n    loggedIn: false,\n    token: \"\",\n    favourites: []\n});\n\nconst liked = (state) => ({\n    ...state\n})\n\nconst faves = (state, {data}) => ({\n    ...state,\n    favourites: removeLayer(data)\n})\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"logReg\": return loggedIn(state, action);\n        case \"loggedOut\": return loggedOut(state);\n        case \"liked\": return liked(state);\n        case \"favourites\": return faves(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","const initial = {\n    loggedIn: false,\n    token: \"\",\n    favourites: []\n};\n\nexport default initial;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./data/reducer\";\nimport initial from \"./data/initial\";\nimport thunk from \"redux-thunk\";\nimport persistState from \"redux-localstorage\";\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer, \n    initial,\n    composeEnhancers(\n        applyMiddleware(thunk),\n        persistState()\n    )\n);\n\nexport default store;","import axios from \"../../axios\";\nimport { logReg, loggedOut, liked, favouriteCountries } from \"./state\";\nimport store from \"../../store\";\n\naxios.interceptors.request.use(function (config) {\n    const token = store.getState().token;\n    config.headers.Authorization =  `Bearer ${token}`;\n\n    return config;\n});\n\nexport const login = (email, password) => {\n    return (dispatch) => {\n        axios.post(\"/login\", {\n            email: email,\n            password: password,\n            password_confirmation: password\n        }).then(({ data }) => {\n            dispatch(logReg(data));\n            axios.get(\"/me/countries\",{\n                headers: {\n                    'Authorization': `Bearer ${data.token}`\n                }\n            }).then(({ data }) => {\n                dispatch(favouriteCountries(data));\n            })\n        })\n    }\n}\n\nexport const reg = (name, email, password) => {\n    return (dispatch) => {\n        axios.post(\"/register\", {\n            name: name,\n            email: email,\n            password: password,\n            password_confirmation: password\n        }).then(({ data }) => {\n            dispatch(logReg(data));\n            axios.get(\"/me/countries\",{\n                headers: {\n                    'Authorization': `Bearer ${data.token}`\n                }\n            }).then(({ data }) => {\n                dispatch(favouriteCountries(data));\n            })\n        })\n    }\n}\n\nexport const logout = (token) => {\n    return (dispatch) => {\n        axios.post(\"/logout\", {\n            token: token,\n        }).then(({ data }) => {\n            dispatch(loggedOut(data));\n        })\n    }\n}\n\nexport const like = (country) => {\n    return (dispatch) => {\n        axios.post(\"/me/countries\", {\n            countries: [country]\n        }).then(({ data }) => {\n            dispatch(liked(data));\n        })\n    }\n}\n\nexport const favourites = () => {\n    return (dispatch) => {\n        axios.get(\"/me/countries\").then(({ data }) => {\n            dispatch(favouriteCountries(data));\n        });\n    }\n} ","import { connect } from \"react-redux\";\nimport Country from \"./Country\";\nimport { like, favourites } from \"../../data/actions/api\";\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.loggedIn,\n        favourites: state.favourites\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchLike: (country) => {\n        dispatch(like(country))\n    },\n    dispatchFavourites: () => dispatch(favourites())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Country);","import React, { Component } from 'react';\nimport geoUrl from \"../data/topo.json\";\nimport { withRouter } from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nclass List extends Component {\n    \n    constructor(props, context) {\n        super(props, context);\n\n        this.wrapperRef = React.createRef();\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.escFunction = this.escFunction.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n      }\n    \n    handleClickOutside(event) {\n        if (this.props.list && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.props.handleListView();\n        }\n    }\n\n    escFunction(event){\n        if(this.props.list && event.keyCode === 27) {\n            this.props.handleListView();\n        }\n    }\n\n    render(){\n\n        const countries = geoUrl.objects.ne_50m_admin_0_countries.geometries;\n        const { handleEnter, handleListView, list } = this.props;\n\n        return (\n            <CSSTransition\n                classNames=\"transition\"\n                transitionappeartimeout={500}\n                timeout={5000}\n                in={ list }\n                unmountOnExit\n                appear\n            >   \n                <div className=\"overlay\" id=\"list\">      \n                    <div className=\"wrapper\" ref={this.setWrapperRef}>\n                        <aside className=\"list\">\n                            <span className=\"close\" onClick={handleListView}></span>\n                            <p className=\"asideHeading\">List</p>\n                            <div className=\"listContainer\">\n                                <ul className=\"countryList\">\n                                    { countries.sort((a, b) => (a.properties.NAME > b.properties.NAME) ? 1 : -1).map(geo =>\n                                        geo.properties.COUNTRY ?\n                                        <li className=\"listItem\" key={ `${geo.properties.ISO_A3}${geo.properties.name}` } onClick={() => {\n                                            const { NAME, DISH, DESCRIPTION, PHOTO, RECIPE } = geo.properties;\n                                            handleEnter(NAME, DISH, DESCRIPTION, PHOTO, RECIPE);\n                                            handleListView();\n                                        }}>{ geo.properties.NAME }</li>\n                                        : null\n                                    )}\n                                </ul>\n                            </div>\n                        </aside>\n                    </div>\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default withRouter(List);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nclass About extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.wrapperRef = React.createRef();\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.escFunction = this.escFunction.bind(this);\n        this.listLink = this.listLink.bind(this);\n        this.loginLink = this.loginLink.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n      }\n    \n    handleClickOutside(event) {\n        if (this.props.about && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.props.handleAboutView();\n        }\n    }\n\n    escFunction(event){\n        if(this.props.about && event.keyCode === 27) {\n            this.props.handleAboutView();\n        }\n    }\n\n    listLink(){\n        this.props.handleAboutView();\n        this.props.handleListView();\n    }\n\n    loginLink(){\n        this.props.handleAboutView();\n        this.props.handleLoginView();\n    }\n\n    render(){\n        const {handleAboutView, about} = this.props;\n\n        return (\n            <CSSTransition\n                classNames=\"transition\"\n                transitionappeartimeout={500}\n                timeout={500}\n                in={ about }\n                unmountOnExit\n                appear\n            >   \n                <div className=\"overlay\" id=\"about\">\n                    <div className=\"wrapper\" ref={this.setWrapperRef}>\n                        <aside className=\"about\">\n                            <span className=\"close\" onClick={handleAboutView}></span>\n                            <div className=\"aboutText\">\n                                <p className=\"asideHeading\">Welcome!</p>\n                                <p className=\"asideText\">Explore the world of food by simply clicking on a country to find out about one of its signature national dishes.</p>\n                                <p className=\"asideText\"><span className=\"link\" onClick={this.loginLink}>Create an account</span> to make your own personalised list of dishes!</p>\n                                <p className=\"asideText\">Some small nations may be hard to locate on the map, so please find them on the <span className=\"link\" onClick={this.listLink}>list</span> instead if you are struggling.</p>\n                            </div>\n                        </aside>\n                    </div>\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default withRouter(About);","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n        <footer className=\"footer\">\n            <h2 className=\"text\">Made by <a className=\"link\" href=\"https://github.com/LaikaTheSpaceDog\" target=\"_blank\" rel=\"noopener noreferrer\">LaikaTheSpaceDog</a></h2>\n        </footer>\n    );\n}\n\nexport default Footer;","import { connect } from \"react-redux\";\nimport Header from \"./Header\";\nimport { favourites } from \"../../data/actions/api\";\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.loggedIn,\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchFavourites: () => dispatch(favourites())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { useState, useRef, useEffect } from 'react';\n\nconst useHeader = (ref, click, clicked) => {\n        \n    useEffect(() => {\n        let handleClickOutside = (event) => {\n            if(ref.current && clicked && !ref.current.contains(event.target)){\n                click();\n            }\n        };\n\n        let escFunction = (event) => {\n            if(ref.current && clicked && event.keyCode === 27) {\n                click();\n            }\n        }\n\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        document.addEventListener(\"keydown\", escFunction, false);\n\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n            document.removeEventListener(\"keydown\", escFunction, false);\n        };\n    }, [ref, click, clicked]);\n}\n\nexport default function Header({handleAboutView, handleListView, loggedIn, handleFavouritesView, dispatchFavourites}){\n    const wrapperRef = useRef(null);\n    const [dropped, setDrop] = useState(false);\n    const [clicked, setClicked] = useState(false);\n    const drop = () => setDrop(true);\n    const click = () => setClicked(!clicked);\n    \n    useHeader(wrapperRef, click, clicked);\n\n    \n    let favouritesViewApi = () => {\n        dispatchFavourites();\n        handleFavouritesView();\n    }\n\n    let handleClick = () => {\n        click();\n        drop();\n    }\n    \n    return (\n        <div className=\"wrapper\" ref={wrapperRef}>\n            <header onClick={ handleClick } className={ clicked ? \"headerDrop\" : \"header\" }>\n                <div className=\"headContainer\">\n                    <h1 className=\"heading\">Food Atlas</h1>\n                </div>\n                <nav className={ !dropped ? \"hidden\" : \"dropdown-content\" }>\n                    <ul>\n                        <li className=\"subHeading\" onClick={ handleAboutView }>About</li>\n                        <li className=\"subHeading\" onClick={ handleListView }>Countries</li>\n                        {!loggedIn ? null :\n                            <li className=\"subHeading\" onClick={ favouritesViewApi }>Favourites</li>          \n                        }\n                    </ul>\n                </nav>\n            </header>\n        </div>\n    );\n};","import React from 'react';\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport geoUrl from \"../data/topo.json\";\n\nconst Map = ({setTooltipContent, handleEnter}) => {\n\n    const mapWidth = 1200;\n    const mapHeight = 600;\n    \n    return (\n        <div className=\"container\">\n            <ComposableMap className=\"map\" width={mapWidth} style={{ width: \"100%\" }} data-tip=\"\" projectionConfig={{ scale: 200 }} >\n                <ZoomableGroup translateExtent={[[0, -mapHeight],[mapWidth, mapHeight]]}>\n                    <Geographies geography={geoUrl}>\n                        {({ geographies }) =>\n                            geographies.map(geo =>\n                                <Geography \n                                    className=\"geography\"\n                                    key={geo.rsmKey} \n                                    geography={geo}\n                                    onMouseOver={() => {\n                                        const { NAME } = geo.properties;\n                                        setTooltipContent(`${NAME}`);\n                                    }}\n                                    onMouseOut={() => {\n                                        setTooltipContent(\"\");\n                                    }}\n                                    onClick={() => {\n                                        const { NAME, DISH, DESCRIPTION, PHOTO, RECIPE } = geo.properties;\n                                        handleEnter(NAME, DISH, DESCRIPTION, PHOTO, RECIPE);\n                                        setTooltipContent(\"\");\n                                    }}\n                                    fill=\"#44BBA4\"\n                                    stroke=\"#E94F37\"\n                                    strokeWidth=\"0.5\"\n                                    style={{\n                                        default: {\n                                            outline: 'none'\n                                        },\n                                        hover: {\n                                            fill: \"#E94F37\",\n                                            outline: 'none'\n                                        },\n                                        pressed: {\n                                            outline: 'none'\n                                        }\n                                    }}\n                                />\n                            )\n                        }\n                    </Geographies>\n                </ZoomableGroup>\n            </ComposableMap>\n        </div>\n    );\n}\n\nexport default Map;","import React, { Component } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport { CSSTransition } from \"react-transition-group\"\n\nclass Login extends Component {\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      reg: true,\n      register: {\n        name: \"\",\n        email: \"\",\n        pass: \"\",\n        conf: \"\"\n      },\n      log: false,\n      login: {\n        email: \"\",\n        pass: \"\"\n      }\n    }\n\n    this.wrapperRef = React.createRef()\n    this.setWrapperRef = this.setWrapperRef.bind(this)\n    this.handleClickOutside = this.handleClickOutside.bind(this)\n    this.escFunction = this.escFunction.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.handleRegName = this.handleRegName.bind(this)\n    this.handleRegEmail = this.handleRegEmail.bind(this)\n    this.handleRegPass = this.handleRegPass.bind(this)\n    this.handleRegConf = this.handleRegConf.bind(this)\n    this.handleLogEmail = this.handleLogEmail.bind(this)\n    this.handleLogPass = this.handleLogPass.bind(this)\n    this.handleLoginApi = this.handleLoginApi.bind(this)\n    this.handleRegisterApi = this.handleRegisterApi.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside)\n    document.addEventListener(\"keydown\", this.escFunction, false)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside)\n    document.removeEventListener(\"keydown\", this.escFunction, false)\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node\n  }\n\n  handleClickOutside(event) {\n    if (\n      this.props.login &&\n      this.wrapperRef &&\n      !this.wrapperRef.contains(event.target)\n    ) {\n      this.props.handleLoginView()\n    }\n  }\n\n  escFunction(event) {\n    if (this.props.login && event.keyCode === 27) {\n      this.props.handleLoginView()\n    }\n  }\n\n  handleClick() {\n    let currentReg = this.state.reg\n    let currentLog = this.state.log\n    this.setState({\n      reg: !currentReg,\n      log: !currentLog\n    })\n  }\n\n  handleRegName(e) {\n    let registerCopy = JSON.parse(JSON.stringify(this.state.register))\n    registerCopy.name = e.currentTarget.value\n    this.setState({\n      register: registerCopy\n    })\n  }\n\n  handleRegEmail(e) {\n    let registerCopy = JSON.parse(JSON.stringify(this.state.register))\n    registerCopy.email = e.currentTarget.value\n    this.setState({\n      register: registerCopy\n    })\n  }\n\n  handleRegPass(e) {\n    let registerCopy = JSON.parse(JSON.stringify(this.state.register))\n    registerCopy.pass = e.currentTarget.value\n    this.setState({\n      register: registerCopy\n    })\n  }\n\n  handleRegConf(e) {\n    let registerCopy = JSON.parse(JSON.stringify(this.state.register))\n    registerCopy.conf = e.currentTarget.value\n    this.setState({\n      register: registerCopy\n    })\n  }\n\n  handleLogEmail(e) {\n    let loginCopy = JSON.parse(JSON.stringify(this.state.login))\n    loginCopy.email = e.currentTarget.value\n    this.setState({\n      login: loginCopy\n    })\n  }\n\n  handleLogPass(e) {\n    let loginCopy = JSON.parse(JSON.stringify(this.state.login))\n    loginCopy.pass = e.currentTarget.value\n    this.setState({\n      login: loginCopy\n    })\n  }\n\n  handleRegisterApi(e) {\n    e.preventDefault()\n    let { name, email, pass, conf } = this.state.register\n    if (pass === conf) {\n      this.props.dispatchReg(name, email, pass)\n      this.props.handleLogin()\n    } else {\n      return \"Passwords must match\"\n    }\n  }\n\n  handleLoginApi(e) {\n    e.preventDefault()\n    let { email, pass } = this.state.login\n    this.props.dispatchLog(email, pass)\n    this.props.handleLoginView()\n  }\n\n  handleLogout() {\n    this.props.dispatchLogout(this.props.token)\n  }\n\n  render() {\n    const { reg, log } = this.state\n    // const { loggedIn, handleLoginView } = this.props\n\n    return (\n      <>\n        {/* TEMPORARILY DISABLING LOGIN/LOGOUT FUNCTIONALITY */}\n        {/* { loggedIn ? \n                    <aside className=\"login\">\n                        <button className=\"loginButton\" onClick={ this.handleLogout }>Log Out</button>\n                    </aside>\n                :\n                    <aside className=\"login\">\n                        <button className=\"loginButton\" onClick={ handleLoginView }>Register/Log In</button>         \n                    </aside>\n                } */}\n        <CSSTransition\n          classNames=\"transition\"\n          transitionappeartimeout={500}\n          timeout={500}\n          in={this.props.login}\n          unmountOnExit\n          appear\n        >\n          <div className=\"overlay\" id=\"login\">\n            <div className=\"wrapper\" ref={this.setWrapperRef}>\n              <aside className=\"logReg\">\n                <ul className=\"tabGroup\">\n                  <li\n                    className={`tab${reg ? \" active\" : \"\"}`}\n                    onClick={this.handleClick}\n                  >\n                    Register\n                  </li>\n                  <li\n                    className={`tab${log ? \" active\" : \"\"}`}\n                    onClick={this.handleClick}\n                  >\n                    Login\n                  </li>\n                </ul>\n                {reg ? (\n                  <form\n                    className=\"form\"\n                    id=\"register\"\n                    onSubmit={this.handleRegisterApi}\n                  >\n                    <label className=\"label\">Full Name</label>\n                    <input\n                      className=\"input\"\n                      type=\"text\"\n                      onChange={this.handleRegName}\n                      value={this.state.register.name}\n                      required\n                    />\n\n                    <label className=\"label\">Email</label>\n                    <input\n                      className=\"input\"\n                      type=\"email\"\n                      onChange={this.handleRegEmail}\n                      value={this.state.register.email}\n                      required\n                    />\n\n                    <label className=\"label\">Password</label>\n                    <input\n                      className=\"input\"\n                      type=\"password\"\n                      onChange={this.handleRegPass}\n                      value={this.state.register.pass}\n                      required\n                    />\n\n                    <label className=\"label\">Password Confirmation</label>\n                    <input\n                      className=\"input\"\n                      type=\"password\"\n                      onChange={this.handleRegConf}\n                      value={this.state.register.conf}\n                      required\n                    />\n\n                    <button className=\"formButton\" type=\"submit\">\n                      Register\n                    </button>\n                  </form>\n                ) : (\n                  <form\n                    className=\"form\"\n                    id=\"login\"\n                    onSubmit={this.handleLoginApi}\n                  >\n                    <label className=\"label\">Email</label>\n                    <input\n                      className=\"input\"\n                      type=\"email\"\n                      onChange={this.handleLogEmail}\n                      value={this.state.login.email}\n                      required\n                    />\n\n                    <label className=\"label\">Password</label>\n                    <input\n                      className=\"input\"\n                      type=\"password\"\n                      onChange={this.handleLogPass}\n                      value={this.state.login.pass}\n                      required\n                    />\n\n                    <button className=\"formButton\" type=\"submit\">\n                      Login\n                    </button>\n                  </form>\n                )}\n              </aside>\n            </div>\n          </div>\n        </CSSTransition>\n      </>\n    )\n  }\n}\n\nexport default withRouter(Login)\n","import { connect } from \"react-redux\";\nimport Login from \"./Login\";\nimport { login, reg, logout } from \"../../data/actions/api\";\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.loggedIn,\n        token: state.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchLog: (email, password) => {\n        dispatch(login(email, password))\n    },\n    dispatchReg: (name, email, password) => {\n        dispatch(reg(name, email, password))\n    },\n    dispatchLogout: (token) => {\n        dispatch(logout(token))\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps )(Login);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nclass Favourites extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.wrapperRef = React.createRef();\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.escFunction = this.escFunction.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        document.addEventListener(\"keydown\", this.escFunction, false);\n        if (this.props.loggedIn){\n            this.props.dispatchFavourites()\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n      }\n    \n    handleClickOutside(event) {\n        if (this.props.favourites && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.props.history.push('/food-atlas');\n            this.props.handleFavouritesView();\n        }\n    }\n\n    escFunction(event){\n        if(this.props.favourites && event.keyCode === 27) {\n            this.props.history.push(\"/food-atlas\");\n            this.props.handleFavouritesView();\n        }\n    }\n\n    render(){\n        const {handleFavouritesView, favourites, favouriteCountries, handleEnter} = this.props;\n\n        return (\n            <CSSTransition\n                classNames=\"transition\"\n                transitionappeartimeout={500}\n                timeout={500}\n                in={ favourites }\n                unmountOnExit\n                appear\n            >   \n                <div className=\"overlay\" id=\"favourites\">\n                    <div className=\"wrapper\" ref={this.setWrapperRef}>\n                        <aside className=\"favourites\">\n                            <span className=\"close\" onClick={handleFavouritesView}></span>\n                            <p className=\"asideHeading\">Favourites</p>\n                            <div className=\"listContainer\">\n                                <ul className=\"favouriteList\">\n                                    {favouriteCountries.sort((a, b) => (a.name > b.name) ? 1 : -1).map(function(country, i) {\n                                        return <li className=\"listItem\" key={i} onClick={() => {\n                                            const { name, dish, description, photo, recipe } = country;\n                                            handleEnter(name, dish, description, photo, recipe);\n                                            handleFavouritesView();\n                                        }}>{`${country.name}: ${country.dish} `}</li>\n                                    })}\n                                </ul>\n                            </div>\n                        </aside>\n                    </div>\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default withRouter(Favourites);","import { connect } from \"react-redux\";\nimport Favourites from \"./Favourites\";\nimport { favourites } from \"../../data/actions/api\";\n\nconst mapStateToProps = state => {\n    return {\n        favouriteCountries: state.favourites,\n        loggedIn: state.loggedIn\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchFavourites: () => dispatch(favourites())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favourites);","import React, { memo } from 'react';\nimport Country from './Country/';\nimport List from './List';\nimport About from './About';\nimport Footer from './Footer';\nimport Header from './Header/';\nimport Map from './Map';\nimport Login from './Login/';\nimport Favourites from './Favourites/';\nimport { CSSTransition } from \"react-transition-group\";\nimport { PersistentComponent } from 'react-persistent-state';\n\nclass Home extends PersistentComponent { \n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            country: \"\",\n            dish: \"\",\n            description: \"\",\n            photo: \"\",\n            recipe: \"\",\n            selected: false,\n            about: false,\n            list: false,\n            login: false,\n            favourites: false,\n            cssTrans: true\n        }\n\n        this.handleBack = this.handleBack.bind(this);\n        this.handleEnter = this.handleEnter.bind(this);\n        this.handleAboutView = this.handleAboutView.bind(this);\n        this.handleListView = this.handleListView.bind(this);\n        this.handleLoginView = this.handleLoginView.bind(this);\n        this.handleFavouritesView = this.handleFavouritesView.bind(this);\n    }\n\n    handleEnter(country, dish, description, photo, recipe){\n        this.setState({\n            country: country,\n            dish: dish,\n            description: description,\n            photo: photo,\n            recipe: recipe,\n            selected: true\n        })\n    }\n\n    handleBack(){\n        this.setState({\n            selected: false\n        });\n        setTimeout(() => {\n            this.setState({\n                country: \"\",\n                dish: \"\",\n                description: \"\",\n                photo: \"\",\n                recipe: \"\"\n            }) \n        }, 500);\n    }\n\n    handlePhotoSource = (photo) => {\n        const url = new URL(photo);\n        return url.hostname;\n    }\n\n    handleAboutView(){\n        let current = this.state.about;\n        this.setState({\n            about: !current\n        })\n    }\n\n    handleListView(){\n        let current = this.state.list;\n        this.setState({\n            list: !current\n        })\n    }\n\n    handleLoginView(){\n        let current = this.state.login;\n        this.setState({\n            login: !current\n        })\n    }\n\n    handleFavouritesView(){\n        let current = this.state.favourites;\n        this.setState({\n            favourites: !current\n        })\n    }\n    \n    render(){ \n    \n        const { country, dish, description, photo, recipe, selected, about, list, cssTrans, login, favourites } = this.state;\n\n        return(\n            <CSSTransition\n                classNames=\"transition\"\n                transitionAppearTimeout={500}\n                timeout={500}\n                in={ cssTrans }\n                unmountOnExit\n                appear\n            >         \n                <section className=\"home\" id=\"home\">\n                    <Header handleAboutView={this.handleAboutView} handleListView={this.handleListView} handleFavouritesView={this.handleFavouritesView} />\n                    <Map setTooltipContent={this.props.setTooltipContent} handleEnter={this.handleEnter} />\n                    <About handleAboutView={ this.handleAboutView } about={about} handleListView={this.handleListView} handleLoginView={ this.handleLoginView } />\n                    <List handleEnter={ this.handleEnter } handleListView={ this.handleListView } list={list} />\n                    <Country selected={ selected } country={ country } dish={ dish } description={ description } photo={ photo } recipe={ recipe } handleBack={ this.handleBack } handlePhotoSource={ this.handlePhotoSource } />\n                    <Footer />\n                    <Login login={ login } handleLoginView={ this.handleLoginView } />\n                    <Favourites favourites={ favourites } handleFavouritesView={ this.handleFavouritesView } handleEnter={ this.handleEnter }/>\n                </section>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default memo(Home);\n","import React, {useState} from 'react';\nimport Home from './components/Home';\nimport \"./styles/css/styles.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\n\n\nconst App = () => {\n    const [content, setContent] = useState(\"\");\n\n    return (\n        <Router>\n            <Home setTooltipContent={ setContent } />\n            <ReactTooltip>{content}</ReactTooltip>\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}