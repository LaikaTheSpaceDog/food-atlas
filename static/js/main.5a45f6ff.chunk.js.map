{"version":3,"sources":["components/Country/Country.js","axios.js","data/actions/state.js","data/reducer.js","data/initial.js","store.js","data/actions/api.js","components/Country/index.js","components/List.js","components/About.js","components/Footer.js","components/Header/Header.js","components/Header/index.js","components/Map.js","components/Login/Login.js","components/Login/index.js","components/Favourites/Favourites.js","components/Favourites/index.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Country","props","context","wrapperRef","React","createRef","setWrapperRef","bind","handleClickOutside","escFunction","handleLike","document","addEventListener","this","removeEventListener","node","event","selected","contains","target","handleBack","history","push","keyCode","faves","found","i","length","name","country","loggedIn","dispatchLike","setTimeout","dispatchFavourites","dish","description","photo","recipe","handlePhotoSource","favourites","CSSTransition","classNames","transitionappeartimeout","timeout","in","unmountOnExit","appear","exit","className","id","ref","to","onClick","href","rel","checkFavourites","src","alt","Component","withRouter","axios","create","baseURL","headers","Accept","logReg","type","token","favouriteCountries","data","reducer","state","action","loggedOut","liked","arr","map","initial","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistState","interceptors","request","use","config","getState","Authorization","dispatch","get","then","connect","post","countries","like","List","list","handleListView","geoUrl","objects","ne_50m_admin_0_countries","geometries","handleEnter","sort","a","b","properties","NAME","geo","COUNTRY","key","ISO_A3","DISH","DESCRIPTION","PHOTO","RECIPE","About","listLink","loginLink","about","handleAboutView","handleLoginView","Footer","Header","handleFavouritesView","useState","hovered","setHovered","onMouseEnter","Map","setTooltipContent","width","style","data-tip","projectionConfig","scale","geography","geographies","rsmKey","onMouseOver","onMouseOut","fill","stroke","strokeWidth","default","outline","hover","pressed","cursor","Login","reg","register","email","pass","conf","log","login","handleClick","handleRegName","handleRegEmail","handleRegPass","handleRegConf","handleLogEmail","handleLogPass","handleLoginApi","handleRegisterApi","handleLogout","currentReg","currentLog","setState","e","registerCopy","JSON","parse","stringify","currentTarget","value","loginCopy","preventDefault","dispatchReg","handleLogin","dispatchLog","dispatchLogout","onSubmit","onChange","required","password","password_confirmation","logout","Favourites","Home","URL","hostname","cssTrans","current","transitionAppearTimeout","PersistentComponent","memo","App","content","setContent","Boolean","location","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"kPAIMA,E,kDACF,WAAYC,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAERC,WAAaC,IAAMC,YACxB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAPM,E,gEAWxBI,SAASC,iBAAiB,YAAaC,KAAKL,oBAC5CG,SAASC,iBAAiB,UAAWC,KAAKJ,aAAa,K,6CAIvDE,SAASG,oBAAoB,YAAaD,KAAKL,oBAC/CG,SAASG,oBAAoB,UAAWD,KAAKJ,aAAa,K,oCAGhDM,GACVF,KAAKV,WAAaY,I,yCAGHC,GACXH,KAAKZ,MAAMgB,UAAYJ,KAAKV,aAAeU,KAAKV,WAAWe,SAASF,EAAMG,UAC1EN,KAAKZ,MAAMmB,aACXP,KAAKZ,MAAMoB,QAAQC,KAAK,wB,kCAIpBN,GACLH,KAAKZ,MAAMgB,UAA8B,KAAlBD,EAAMO,UAC5BV,KAAKZ,MAAMmB,aACXP,KAAKZ,MAAMoB,QAAQC,KAAK,wB,sCAIhBE,GAEZ,IADA,IAAIC,GAAQ,EACJC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,GAAI,EACjC,GAAIF,EAAME,GAAGE,OAASf,KAAKZ,MAAM4B,QAAQ,CACrCJ,GAAQ,EACR,MAGR,OAAOA,I,mCAGE,IAAD,OACLZ,KAAKZ,MAAM6B,WACVjB,KAAKZ,MAAM8B,aAAalB,KAAKZ,MAAM4B,SACnCG,YAAW,WAAO,EAAK/B,MAAMgC,uBAAuB,Q,+BAInD,IAAD,EACiHpB,KAAKZ,MAAlH4B,EADJ,EACIA,QAASK,EADb,EACaA,KAAMC,EADnB,EACmBA,YAAaC,EADhC,EACgCA,MAAOC,EADvC,EACuCA,OAAQjB,EAD/C,EAC+CA,WAAYkB,EAD3D,EAC2DA,kBAAmBrB,EAD9E,EAC8EA,SAAUsB,EADxF,EACwFA,WAAYT,EADpG,EACoGA,SAExG,OACI,kBAACU,EAAA,EAAD,CACIC,WAAW,aACXC,wBAAyB,IACzBC,QAAS,IACTC,GAAK3B,EACL4B,eAAa,EACbC,QAAM,EACNC,MAAI,GAEJ,yBAAKC,UAAU,UAAUC,GAAG,WACxB,yBAAKD,UAAU,UAAUE,IAAKrC,KAAKP,eAEnCuB,IAAYK,EACR,6BAASc,UAAU,kBACf,4BAAQA,UAAU,iBACd,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,WAAYnB,GAC1B,wBAAImB,UAAU,cAAd,4BAEJ,kBAAC,IAAD,CAAMG,GAAG,QAAQC,QAAUhC,GAAa,0BAAM4B,UAAU,kBAE5D,6BAASA,UAAU,eACf,uBAAGA,UAAU,oBAAb,yEAAsG,8BAAM,uBAAGA,UAAU,OAAOK,KAAK,+BAA+BlC,OAAO,SAASmC,IAAI,uBAA5E,wBAA5G,OAGTzB,EAUC,6BAASmB,UAAU,WACf,4BAAQA,UAAU,iBACZlB,EACEjB,KAAK0C,gBAAgBhB,GACjB,0BAAMS,UAAU,cAAcI,QAASvC,KAAKH,aAE5C,0BAAMsC,UAAU,QAAQI,QAASvC,KAAKH,aAEtC,KAER,kBAAC,IAAD,CAAMyC,GAAG,QAAQC,QAAUhC,GAAa,0BAAM4B,UAAU,iBACxD,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,WAAYnB,GAC1B,wBAAImB,UAAU,cAAed,KAGrC,6BAASc,UAAU,eACf,4BAAQA,UAAU,kBACd,yBAAKA,UAAU,QAAQQ,IAAMpB,EAAQqB,IAAG,UAAOvB,EAAP,kCAAuCL,KAC/E,gCAAYmB,UAAU,WAAtB,qBAAoDV,EAAkBF,KAE1E,yBAAKY,UAAU,eACX,uBAAGA,UAAU,QAASb,GACtB,uBAAGa,UAAU,iBAAiBK,KAAOhB,GAArC,6BAhCZ,6BAASW,UAAU,kBACf,4BAAQA,UAAU,iBACd,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,cAAd,4BAEJ,kBAAC,IAAD,CAAMG,GAAG,QAAQC,QAAUhC,GAAa,0BAAM4B,UAAU,0B,GA5FlEU,aAmIPC,cAAW3D,G,QCrIX4D,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,gDACTC,QAAS,CACLC,OAAQ,sBCLHC,EAAS,SAAC,GACnB,MAAO,CACHC,KAAM,SACNC,MAH2B,EAAXA,QAmBXC,EAAqB,SAACC,GAC/B,MAAO,CACHH,KAAM,aACNG,KAAMA,I,gBCeCC,EAVC,SAACC,EAAOC,GACpB,OAAQA,EAAON,MACX,IAAK,SAAU,OAxBN,SAACK,EAAD,OAAUJ,EAAV,EAAUA,MAAV,mBAAC,eACXI,GADU,IAEbzC,UAAU,EACVqC,MAAOA,IAqBmBrC,CAASyC,EAAOC,GACtC,IAAK,YAAa,OAnBR,SAACD,GAAD,mBAAC,eACZA,GADW,IAEdzC,UAAU,EACVqC,MAAO,GACP5B,WAAY,KAeiBkC,CAAUF,GACnC,IAAK,QAAS,OAbR,SAACA,GAAD,sBACPA,GAYsBG,CAAMH,GAC3B,IAAK,aAAc,OAVb,SAACA,EAAD,OAtBOI,EAsBEN,EAAT,EAASA,KAAT,mBAAC,eACRE,GADO,IAEVhC,YAxBiBoC,EAwBON,EAvBXM,EAAIN,KAAKO,KAAI,SAAA/C,GAAO,OAAIA,QA+BPL,CAAM+C,EAAOC,GACvC,QAAS,OAAOD,IC3BTM,EANC,CACZ/C,UAAU,EACVqC,MAAO,GACP5B,WAAY,I,yBCGVuC,EACFC,OAAOC,sCAAwCC,IAWpCC,EATDC,YACVb,EACAO,EACAC,EACIM,YAAgBC,KAChBC,QCVR1B,EAAM2B,aAAaC,QAAQC,KAAI,SAAUC,GACrC,IAAMvB,EAAQe,EAAMS,WAAWxB,MAG/B,OAFAuB,EAAO3B,QAAQ6B,cAAf,iBAA0CzB,GAEnCuB,KAGJ,IA2DMnD,EAAa,WACtB,OAAO,SAACsD,GACJjC,EAAMkC,IAAI,iBAAiBC,MAAK,YAAe,IAAZ1B,EAAW,EAAXA,KAC/BwB,EAASzB,EAAmBC,SCvDzB2B,eAdS,SAAAzB,GACpB,MAAO,CACHzC,SAAUyC,EAAMzC,SAChBS,WAAYgC,EAAMhC,eAIC,SAAAsD,GAAQ,MAAK,CACpC9D,aAAc,SAACF,GACXgE,ED+CY,SAAChE,GACjB,OAAO,SAACgE,GACJjC,EAAMqC,KAAK,gBAAiB,CACxBC,UAAW,CAACrE,KACbkE,MAAK,YAAc,EAAX1B,KACPwB,EJnDD,CACH3B,KAAM,cKFGiC,CAAKtE,KAElBI,mBAAoB,kBAAM4D,EAAStD,SAGxByD,CAA6ChG,G,QCbtDoG,E,kDAEF,WAAYnG,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAERC,WAAaC,IAAMC,YACxB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBANK,E,gEAUxBI,SAASC,iBAAiB,YAAaC,KAAKL,oBAC5CG,SAASC,iBAAiB,UAAWC,KAAKJ,aAAa,K,6CAIvDE,SAASG,oBAAoB,YAAaD,KAAKL,oBAC/CG,SAASG,oBAAoB,UAAWD,KAAKJ,aAAa,K,oCAGhDM,GACVF,KAAKV,WAAaY,I,yCAGHC,GACXH,KAAKZ,MAAMoG,MAAQxF,KAAKV,aAAeU,KAAKV,WAAWe,SAASF,EAAMG,UACtEN,KAAKZ,MAAMoB,QAAQC,KAAK,qBACxBT,KAAKZ,MAAMqG,oB,kCAIPtF,GACLH,KAAKZ,MAAMoG,MAA0B,KAAlBrF,EAAMO,UACxBV,KAAKZ,MAAMoB,QAAQC,KAAK,qBACxBT,KAAKZ,MAAMqG,oB,+BAMf,IAAMJ,EAAYK,EAAOC,QAAQC,yBAAyBC,WAFtD,EAG0C7F,KAAKZ,MAA3C0G,EAHJ,EAGIA,YAAaL,EAHjB,EAGiBA,eAAgBD,EAHjC,EAGiCA,KAErC,OACI,kBAAC7D,EAAA,EAAD,CACIC,WAAW,aACXC,wBAAyB,IACzBC,QAAS,IACTC,GAAKyD,EACLxD,eAAa,EACbC,QAAM,GAEN,yBAAKE,UAAU,UAAUC,GAAG,QACxB,yBAAKD,UAAU,UAAUE,IAAKrC,KAAKP,eAC/B,2BAAO0C,UAAU,QACb,kBAAC,IAAD,CAAMA,UAAU,QAAQK,KAAK,QAAQD,QAASkD,GAAgB,0BAAMtD,UAAU,iBAC9E,uBAAGA,UAAU,gBAAb,QACA,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,eACRkD,EAAUU,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,WAAWC,KAAOF,EAAEC,WAAWC,KAAQ,GAAK,KAAGpC,KAAI,SAAAqC,GAAG,OAChFA,EAAIF,WAAWG,QACf,wBAAIlE,UAAU,WAAWmE,IAAG,UAAMF,EAAIF,WAAWK,QAArB,OAA8BH,EAAIF,WAAWnF,OAAS,kBAAC,IAAD,CAAMuB,GAAG,WAAWC,QAAS,WAAO,IAAD,EAC9D6D,EAAIF,WAA/CC,EADyG,EACzGA,KAAMK,EADmG,EACnGA,KAAMC,EAD6F,EAC7FA,YAAaC,EADgF,EAChFA,MAAOC,EADyE,EACzEA,OACxCb,EAAYK,EAAMK,EAAMC,EAAaC,EAAOC,GAC5ClB,MACCW,EAAIF,WAAWC,OAClB,kB,GAnEvBtD,aA+EJC,cAAWyC,GChFpBqB,E,kDAEF,WAAYxH,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAERC,WAAaC,IAAMC,YACxB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKmH,SAAW,EAAKA,SAASnH,KAAd,gBAChB,EAAKoH,UAAY,EAAKA,UAAUpH,KAAf,gBARO,E,gEAYxBI,SAASC,iBAAiB,YAAaC,KAAKL,oBAC5CG,SAASC,iBAAiB,UAAWC,KAAKJ,aAAa,K,6CAIvDE,SAASG,oBAAoB,YAAaD,KAAKL,oBAC/CG,SAASG,oBAAoB,UAAWD,KAAKJ,aAAa,K,oCAGhDM,GACVF,KAAKV,WAAaY,I,yCAGHC,GACXH,KAAKZ,MAAM2H,OAAS/G,KAAKV,aAAeU,KAAKV,WAAWe,SAASF,EAAMG,UACvEN,KAAKZ,MAAMoB,QAAQC,KAAK,qBACxBT,KAAKZ,MAAM4H,qB,kCAIP7G,GACLH,KAAKZ,MAAM2H,OAA2B,KAAlB5G,EAAMO,UACzBV,KAAKZ,MAAMoB,QAAQC,KAAK,qBACxBT,KAAKZ,MAAM4H,qB,iCAKfhH,KAAKZ,MAAM4H,kBACXhH,KAAKZ,MAAMqG,mB,kCAIXzF,KAAKZ,MAAM4H,kBACXhH,KAAKZ,MAAM6H,oB,+BAGN,IAAD,EAC8DjH,KAAKZ,MAAhE4H,EADH,EACGA,gBAAiBD,EADpB,EACoBA,MADpB,EAC2BE,gBAD3B,EAC4CxB,eAEhD,OACI,kBAAC9D,EAAA,EAAD,CACIC,WAAW,aACXC,wBAAyB,IACzBC,QAAS,IACTC,GAAKgF,EACL/E,eAAa,EACbC,QAAM,GAEN,yBAAKE,UAAU,UAAUC,GAAG,SACxB,yBAAKD,UAAU,UAAUE,IAAKrC,KAAKP,eAC/B,2BAAO0C,UAAU,SACb,kBAAC,IAAD,CAAMG,GAAG,QAAQC,QAASyE,GAAiB,0BAAM7E,UAAU,iBAC3D,yBAAKA,UAAU,aACX,uBAAGA,UAAU,gBAAb,YACA,uBAAGA,UAAU,aAAb,qHACA,uBAAGA,UAAU,aAAY,0BAAMA,UAAU,OAAOI,QAASvC,KAAK8G,WAArC,qBAAzB,kDACA,uBAAG3E,UAAU,aAAb,mFAAyG,0BAAMA,UAAU,OAAOI,QAASvC,KAAK6G,UAArC,QAAzG,4C,GAvEZhE,aAiFLC,cAAW8D,GC1EXM,EATA,WAEX,OACI,4BAAQ/E,UAAU,UACd,wBAAIA,UAAU,QAAd,WAA6B,uBAAGA,UAAU,OAAOK,KAAK,sCAAsClC,OAAO,SAASmC,IAAI,uBAAnF,uBCwB1B0E,EA5BA,SAAC,GAA2F,IAA1FH,EAAyF,EAAzFA,gBAAiBvB,EAAwE,EAAxEA,eAAgBxE,EAAwD,EAAxDA,SAAUmG,EAA8C,EAA9CA,qBAAsBhG,EAAwB,EAAxBA,mBAAwB,EAExEiG,oBAAS,GAF+D,mBAE/FC,EAF+F,KAEtFC,EAFsF,KAUtG,OACI,4BAAQpF,UAAU,UACd,yBAAKA,UAAU,gBAAgBqF,aATzB,kBAAMD,GAAW,KAUnB,wBAAIpF,UAAU,WAAd,eAEJ,yBAAKA,UAAamF,EAAqB,mBAAX,UACxB,4BACI,4BAAI,uBAAGnF,UAAU,wBAAwBK,KAAK,SAASD,QAAUyE,GAA7D,UACJ,4BAAI,uBAAG7E,UAAU,wBAAwBK,KAAK,QAAQD,QAAUkD,GAA5D,cACFxE,EACE,4BAAI,uBAAGkB,UAAU,wBAAwBK,KAAK,cAAcD,QAfxD,WACpBnB,IACAgG,MAaoB,eADK,SCPlBjC,eAVS,SAAAzB,GACpB,MAAO,CACHzC,SAAUyC,EAAMzC,aAIG,SAAA+D,GAAQ,MAAK,CACpC5D,mBAAoB,kBAAM4D,EAAStD,SAGxByD,CAA6CgC,G,QC2C7CM,EApDH,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,kBAAmB5B,EAAiB,EAAjBA,YAE7B,OACI,yBAAK3D,UAAU,aACX,kBAAC,gBAAD,CAAewF,MAAO,KAAMC,MAAO,CAAED,MAAO,QAAUE,WAAS,GAAGC,iBAAkB,CAAEC,MAAO,MACzF,kBAAC,gBAAD,KACI,kBAAC,cAAD,CAAaC,UAAWtC,IACnB,qBAAGuC,YACYlE,KAAI,SAAAqC,GAAG,OACf,kBAAC,IAAD,CAAM9D,GAAG,uBAAuBgE,IAAMF,EAAIF,WAAWC,MACjD,kBAAC,YAAD,CACIG,IAAKF,EAAI8B,OACTF,UAAW5B,EACX+B,YAAa,WAAO,IACRhC,EAASC,EAAIF,WAAbC,KACRuB,EAAkB,GAAD,OAAIvB,KAEzBiC,WAAY,WACRV,EAAkB,KAEtBnF,QAAS,WAAO,IAAD,EACwC6D,EAAIF,WAA/CC,EADG,EACHA,KAAMK,EADH,EACGA,KAAMC,EADT,EACSA,YAAaC,EADtB,EACsBA,MAAOC,EAD7B,EAC6BA,OACxCb,EAAYK,EAAMK,EAAMC,EAAaC,EAAOC,GAC5Ce,EAAkB,KAEtBW,KAAK,UACLC,OAAO,UACPC,YAAY,MACZX,MAAO,CACHY,QAAS,CACLC,QAAS,QAEbC,MAAO,CACHL,KAAM,UACNI,QAAS,QAEbE,QAAS,CACLF,QAAS,QAEbG,OAAO,wBCxC7CC,E,kDAEF,WAAYzJ,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAERqE,MAAQ,CACToF,KAAK,EACLC,SAAU,CACNhI,KAAM,GACNiI,MAAO,GACPC,KAAM,GACNC,KAAM,IAEVC,KAAK,EACLC,MAAO,CACHJ,MAAO,GACPC,KAAM,KAId,EAAK3J,WAAaC,IAAMC,YACxB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAK2J,YAAc,EAAKA,YAAY3J,KAAjB,gBACnB,EAAK4J,cAAgB,EAAKA,cAAc5J,KAAnB,gBACrB,EAAK6J,eAAiB,EAAKA,eAAe7J,KAApB,gBACtB,EAAK8J,cAAgB,EAAKA,cAAc9J,KAAnB,gBACrB,EAAK+J,cAAgB,EAAKA,cAAc/J,KAAnB,gBACrB,EAAKgK,eAAiB,EAAKA,eAAehK,KAApB,gBACtB,EAAKiK,cAAgB,EAAKA,cAAcjK,KAAnB,gBACrB,EAAKkK,eAAiB,EAAKA,eAAelK,KAApB,gBACtB,EAAKmK,kBAAoB,EAAKA,kBAAkBnK,KAAvB,gBACzB,EAAKoK,aAAe,EAAKA,aAAapK,KAAlB,gBA/BI,E,gEAmCxBI,SAASC,iBAAiB,YAAaC,KAAKL,oBAC5CG,SAASC,iBAAiB,UAAWC,KAAKJ,aAAa,K,6CAIvDE,SAASG,oBAAoB,YAAaD,KAAKL,oBAC/CG,SAASG,oBAAoB,UAAWD,KAAKJ,aAAa,K,oCAGhDM,GACVF,KAAKV,WAAaY,I,yCAGHC,GACXH,KAAKZ,MAAMgK,OAASpJ,KAAKV,aAAeU,KAAKV,WAAWe,SAASF,EAAMG,UACvEN,KAAKZ,MAAMoB,QAAQC,KAAK,qBACxBT,KAAKZ,MAAM6H,qB,kCAIP9G,GACLH,KAAKZ,MAAMgK,OAA2B,KAAlBjJ,EAAMO,UACzBV,KAAKZ,MAAMoB,QAAQC,KAAK,qBACxBT,KAAKZ,MAAM6H,qB,oCAKf,IAAI8C,EAAa/J,KAAK0D,MAAMoF,IACxBkB,EAAahK,KAAK0D,MAAMyF,IAC5BnJ,KAAKiK,SAAS,CACVnB,KAAMiB,EACNZ,KAAMa,M,oCAIAE,GACV,IAAIC,EAAeC,KAAKC,MAAMD,KAAKE,UAAUtK,KAAK0D,MAAMqF,WACxDoB,EAAapJ,KAAOmJ,EAAEK,cAAcC,MACpCxK,KAAKiK,SAAS,CACVlB,SAAUoB,M,qCAIHD,GACX,IAAIC,EAAeC,KAAKC,MAAMD,KAAKE,UAAUtK,KAAK0D,MAAMqF,WACxDoB,EAAanB,MAAQkB,EAAEK,cAAcC,MACrCxK,KAAKiK,SAAS,CACVlB,SAAUoB,M,oCAIJD,GACV,IAAIC,EAAeC,KAAKC,MAAMD,KAAKE,UAAUtK,KAAK0D,MAAMqF,WACxDoB,EAAalB,KAAOiB,EAAEK,cAAcC,MACpCxK,KAAKiK,SAAS,CACVlB,SAAUoB,M,oCAIJD,GACV,IAAIC,EAAeC,KAAKC,MAAMD,KAAKE,UAAUtK,KAAK0D,MAAMqF,WACxDoB,EAAajB,KAAOgB,EAAEK,cAAcC,MACpCxK,KAAKiK,SAAS,CACVlB,SAAUoB,M,qCAIHD,GACX,IAAIO,EAAYL,KAAKC,MAAMD,KAAKE,UAAUtK,KAAK0D,MAAM0F,QACrDqB,EAAUzB,MAAQkB,EAAEK,cAAcC,MAClCxK,KAAKiK,SAAS,CACVb,MAAOqB,M,oCAIDP,GACV,IAAIO,EAAYL,KAAKC,MAAMD,KAAKE,UAAUtK,KAAK0D,MAAM0F,QACrDqB,EAAUxB,KAAOiB,EAAEK,cAAcC,MACjCxK,KAAKiK,SAAS,CACVb,MAAOqB,M,wCAIGP,GACdA,EAAEQ,iBADc,MAEgB1K,KAAK0D,MAAMqF,SAAtChI,EAFW,EAEXA,KAAMiI,EAFK,EAELA,MAAOC,EAFF,EAEEA,KAClB,GAAIA,IAHY,EAEQC,KAKrB,MAAO,uBAHNlJ,KAAKZ,MAAMuL,YAAY5J,EAAMiI,EAAOC,GACpCjJ,KAAKZ,MAAMwL,gB,qCAMJV,GACXA,EAAEQ,iBADW,MAEO1K,KAAK0D,MAAM0F,MAA1BJ,EAFQ,EAERA,MAAOC,EAFC,EAEDA,KACZjJ,KAAKZ,MAAMyL,YAAY7B,EAAOC,GAC9BjJ,KAAKZ,MAAM6H,oB,qCAIXjH,KAAKZ,MAAM0L,eAAe9K,KAAKZ,MAAMkE,S,+BAGhC,IAAD,EAEiBtD,KAAK0D,MAAlBoF,EAFJ,EAEIA,IAAKK,EAFT,EAESA,IAFT,EAGkCnJ,KAAKZ,MAAnC6B,EAHJ,EAGIA,SAAUgG,EAHd,EAGcA,gBAElB,OACI,oCACMhG,EACE,2BAAOkB,UAAU,YACb,uBAAGA,UAAU,YAAYK,KAAK,UAAUD,QAAUvC,KAAK8J,cAAvD,YAGJ,2BAAO3H,UAAU,YACb,uBAAGA,UAAU,YAAYK,KAAK,SAASD,QAAU0E,GAAjD,oBAGR,kBAACtF,EAAA,EAAD,CACIC,WAAW,aACXC,wBAAyB,IACzBC,QAAS,IACTC,GAAK/B,KAAKZ,MAAMgK,MAChBpH,eAAa,EACbC,QAAM,GAEN,yBAAKE,UAAU,UAAUC,GAAG,SACxB,yBAAKD,UAAU,UAAUE,IAAKrC,KAAKP,eAC/B,2BAAO0C,UAAU,UACb,wBAAIA,UAAU,YACV,wBAAIA,UAAS,aAAQ2G,EAAM,UAAY,IAAMvG,QAASvC,KAAKqJ,aAA3D,YACA,wBAAIlH,UAAS,aAAQgH,EAAM,UAAY,IAAM5G,QAASvC,KAAKqJ,aAA3D,UAEHP,EACG,0BAAM3G,UAAU,OAAOC,GAAG,WAAW2I,SAAW/K,KAAK6J,mBACjD,2BAAO1H,UAAU,SAAjB,aACA,2BAAOA,UAAU,QAAQkB,KAAK,OAAO2H,SAAWhL,KAAKsJ,cAAgBkB,MAAQxK,KAAK0D,MAAMqF,SAAShI,KAAOkK,UAAQ,IAEhH,2BAAO9I,UAAU,SAAjB,SACA,2BAAOA,UAAU,QAAQkB,KAAK,QAAQ2H,SAAWhL,KAAKuJ,eAAiBiB,MAAQxK,KAAK0D,MAAMqF,SAASC,MAAQiC,UAAQ,IAEnH,2BAAO9I,UAAU,SAAjB,YACA,2BAAOA,UAAU,QAAQkB,KAAK,WAAW2H,SAAWhL,KAAKwJ,cAAgBgB,MAAQxK,KAAK0D,MAAMqF,SAASE,KAAOgC,UAAQ,IAEpH,2BAAO9I,UAAU,SAAjB,yBACA,2BAAOA,UAAU,QAAQkB,KAAK,WAAW2H,SAAWhL,KAAKyJ,cAAgBe,MAAQxK,KAAK0D,MAAMqF,SAASG,KAAO+B,UAAQ,IAEpH,4BAAQ9I,UAAU,aAAakB,KAAK,UAApC,aAGJ,0BAAMlB,UAAU,OAAOC,GAAG,QAAQ2I,SAAW/K,KAAK4J,gBAC9C,2BAAOzH,UAAU,SAAjB,SACA,2BAAOA,UAAU,QAAQkB,KAAK,QAAQ2H,SAAWhL,KAAK0J,eAAiBc,MAAQxK,KAAK0D,MAAM0F,MAAMJ,MAAQiC,UAAQ,IAEhH,2BAAO9I,UAAU,SAAjB,YACA,2BAAOA,UAAU,QAAQkB,KAAK,WAAW2H,SAAWhL,KAAK2J,cAAgBa,MAAQxK,KAAK0D,MAAM0F,MAAMH,KAAOgC,UAAQ,IAEjH,4BAAQ9I,UAAU,aAAakB,KAAK,UAApC,mB,GAtMpBR,aAkNLC,cAAW+F,GC/LX1D,eAnBS,SAAAzB,GACpB,MAAO,CACHzC,SAAUyC,EAAMzC,SAChBqC,MAAOI,EAAMJ,UAIM,SAAA0B,GAAQ,MAAK,CACpC6F,YAAa,SAAC7B,EAAOkC,GACjBlG,ETFa,SAACgE,EAAOkC,GACzB,OAAO,SAAClG,GACJjC,EAAMqC,KAAK,SAAU,CACjB4D,MAAOA,EACPkC,SAAUA,EACVC,sBAAuBD,IACxBhG,MAAK,YAAe,IAAZ1B,EAAW,EAAXA,KACPwB,EAAS5B,EAAOI,IAChBT,EAAMkC,IAAI,gBAAgB,CACtB/B,QAAS,CACL,cAAgB,UAAhB,OAA2BM,EAAKF,UAErC4B,MAAK,YAAe,IAAZ1B,EAAW,EAAXA,KACPwB,EAASzB,EAAmBC,WSX3B4F,CAAMJ,EAAOkC,KAE1BP,YAAa,SAAC5J,EAAMiI,EAAOkC,GACvBlG,ETcW,SAACjE,EAAMiI,EAAOkC,GAC7B,OAAO,SAAClG,GACJjC,EAAMqC,KAAK,YAAa,CACpBrE,KAAMA,EACNiI,MAAOA,EACPkC,SAAUA,EACVC,sBAAuBD,IACxBhG,MAAK,YAAe,IAAZ1B,EAAW,EAAXA,KACPwB,EAAS5B,EAAOI,IAChBT,EAAMkC,IAAI,gBAAgB,CACtB/B,QAAS,CACL,cAAgB,UAAhB,OAA2BM,EAAKF,UAErC4B,MAAK,YAAe,IAAZ1B,EAAW,EAAXA,KACPwB,EAASzB,EAAmBC,WS5B3BsF,CAAI/H,EAAMiI,EAAOkC,KAE9BJ,eAAgB,SAACxH,GACb0B,ET+Bc,SAAC1B,GACnB,OAAO,SAAC0B,GACJjC,EAAMqC,KAAK,UAAW,CAClB9B,MAAOA,IACR4B,MAAK,YAAc,EAAX1B,KACPwB,EJ/CD,CACH3B,KAAM,kBaUG+H,CAAO9H,QAIT6B,CAA8C0D,GCnBvDwC,E,kDAEF,WAAYjM,EAAOC,GAAU,IAAD,8BACxB,cAAMD,EAAOC,IAERC,WAAaC,IAAMC,YACxB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBANK,E,gEAUxBI,SAASC,iBAAiB,YAAaC,KAAKL,oBAC5CG,SAASC,iBAAiB,UAAWC,KAAKJ,aAAa,GACnDI,KAAKZ,MAAM6B,UACXjB,KAAKZ,MAAMgC,uB,6CAKftB,SAASG,oBAAoB,YAAaD,KAAKL,oBAC/CG,SAASG,oBAAoB,UAAWD,KAAKJ,aAAa,K,oCAGhDM,GACVF,KAAKV,WAAaY,I,yCAGHC,GACXH,KAAKZ,MAAMsC,YAAc1B,KAAKV,aAAeU,KAAKV,WAAWe,SAASF,EAAMG,UAC5EN,KAAKZ,MAAMoB,QAAQC,KAAK,qBACxBT,KAAKZ,MAAMgI,0B,kCAIPjH,GACLH,KAAKZ,MAAMsC,YAAgC,KAAlBvB,EAAMO,UAC9BV,KAAKZ,MAAMoB,QAAQC,KAAK,qBACxBT,KAAKZ,MAAMgI,0B,+BAIV,IAAD,EACwEpH,KAAKZ,MAA1EgI,EADH,EACGA,qBAAsB1F,EADzB,EACyBA,WAAY6B,EADrC,EACqCA,mBAAoBuC,EADzD,EACyDA,YAE7D,OACI,kBAACnE,EAAA,EAAD,CACIC,WAAW,aACXC,wBAAyB,IACzBC,QAAS,IACTC,GAAKL,EACLM,eAAa,EACbC,QAAM,GAEN,yBAAKE,UAAU,UAAUC,GAAG,cACxB,yBAAKD,UAAU,UAAUE,IAAKrC,KAAKP,eAC/B,2BAAO0C,UAAU,cACb,kBAAC,IAAD,CAAMG,GAAG,cAAcC,QAAS6E,GAAsB,0BAAMjF,UAAU,iBACtE,uBAAGA,UAAU,gBAAb,cACA,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,iBACToB,EAAmBwC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEjF,KAAOkF,EAAElF,KAAQ,GAAK,KAAGgD,KAAI,SAAS/C,EAASH,GACjF,OAAO,wBAAIsB,UAAU,YAAW,kBAAC,IAAD,CAAMG,GAAG,uBAAuBgE,IAAKzF,EAAG0B,QAAS,WAAO,IAC5ExB,EAA2CC,EAA3CD,KAAMM,EAAqCL,EAArCK,KAAMC,EAA+BN,EAA/BM,YAAaC,EAAkBP,EAAlBO,MAAOC,EAAWR,EAAXQ,OACxCsE,EAAY/E,EAAMM,EAAMC,EAAaC,EAAOC,GAC5C4F,MAH4B,UAIzBpG,EAAQD,KAJiB,aAIRC,EAAQK,KAJA,oB,GA9D/CwB,aA8EVC,cAAWuI,GCnEXlG,eAXS,SAAAzB,GACpB,MAAO,CACHH,mBAAoBG,EAAMhC,WAC1BT,SAAUyC,EAAMzC,aAIG,SAAA+D,GAAQ,MAAK,CACpC5D,mBAAoB,kBAAM4D,EAAStD,SAGxByD,CAA6CkG,GCHtDC,E,kDAEF,WAAYlM,GAAO,IAAD,8BACd,cAAMA,IAkDVqC,kBAAoB,SAACF,GAEjB,OADY,IAAIgK,IAAIhK,GACTiK,UAlDX,EAAK9H,MAAQ,CACT1C,QAAS,GACTK,KAAM,GACNC,YAAa,GACbC,MAAO,GACPC,OAAQ,GACRpB,UAAU,EACV2G,OAAO,EACPvB,MAAM,EACN4D,OAAO,EACP1H,YAAY,EACZ+J,UAAU,GAGd,EAAKlL,WAAa,EAAKA,WAAWb,KAAhB,gBAClB,EAAKoG,YAAc,EAAKA,YAAYpG,KAAjB,gBACnB,EAAKsH,gBAAkB,EAAKA,gBAAgBtH,KAArB,gBACvB,EAAK+F,eAAiB,EAAKA,eAAe/F,KAApB,gBACtB,EAAKuH,gBAAkB,EAAKA,gBAAgBvH,KAArB,gBACvB,EAAK0H,qBAAuB,EAAKA,qBAAqB1H,KAA1B,gBAtBd,E,wDAyBNsB,EAASK,EAAMC,EAAaC,EAAOC,GAC3CxB,KAAKiK,SAAS,CACVjJ,QAASA,EACTK,KAAMA,EACNC,YAAaA,EACbC,MAAOA,EACPC,OAAQA,EACRpB,UAAU,M,mCAIL,IAAD,OACRJ,KAAKiK,SAAS,CACV7J,UAAU,IAEde,YAAW,WACP,EAAK8I,SAAS,CACVjJ,QAAS,GACTK,KAAM,GACNC,YAAa,GACbC,MAAO,GACPC,OAAQ,OAEb,O,wCASH,IAAIkK,EAAU1L,KAAK0D,MAAMqD,MACzB/G,KAAKiK,SAAS,CACVlD,OAAQ2E,M,uCAKZ,IAAIA,EAAU1L,KAAK0D,MAAM8B,KACzBxF,KAAKiK,SAAS,CACVzE,MAAOkG,M,wCAKX,IAAIA,EAAU1L,KAAK0D,MAAM0F,MACzBpJ,KAAKiK,SAAS,CACVb,OAAQsC,M,6CAKZ,IAAIA,EAAU1L,KAAK0D,MAAMhC,WACzB1B,KAAKiK,SAAS,CACVvI,YAAagK,M,+BAIZ,IAAD,EAEsG1L,KAAK0D,MAAvG1C,EAFJ,EAEIA,QAASK,EAFb,EAEaA,KAAMC,EAFnB,EAEmBA,YAAaC,EAFhC,EAEgCA,MAAOC,EAFvC,EAEuCA,OAAQpB,EAF/C,EAE+CA,SAAU2G,EAFzD,EAEyDA,MAAOvB,EAFhE,EAEgEA,KAAMiG,EAFtE,EAEsEA,SAAUrC,EAFhF,EAEgFA,MAAO1H,EAFvF,EAEuFA,WAE3F,OACI,kBAACC,EAAA,EAAD,CACIC,WAAW,aACX+J,wBAAyB,IACzB7J,QAAS,IACTC,GAAK0J,EACLzJ,eAAa,EACbC,QAAM,GAEN,6BAASE,UAAU,OAAOC,GAAG,QACzB,kBAAC,EAAD,CAAQ4E,gBAAiBhH,KAAKgH,gBAAiBvB,eAAgBzF,KAAKyF,eAAgB2B,qBAAsBpH,KAAKoH,uBAC/G,kBAAC,EAAD,CAAKM,kBAAmB1H,KAAKZ,MAAMsI,kBAAmB5B,YAAa9F,KAAK8F,cACxE,kBAAC,EAAD,CAAOkB,gBAAkBhH,KAAKgH,gBAAkBD,MAAOA,EAAOtB,eAAgBzF,KAAKyF,eAAgBwB,gBAAkBjH,KAAKiH,kBAC1H,kBAAC,EAAD,CAAMnB,YAAc9F,KAAK8F,YAAcL,eAAiBzF,KAAKyF,eAAiBD,KAAMA,IACpF,kBAAC,EAAD,CAASpF,SAAWA,EAAWY,QAAUA,EAAUK,KAAOA,EAAOC,YAAcA,EAAcC,MAAQA,EAAQC,OAASA,EAASjB,WAAaP,KAAKO,WAAakB,kBAAoBzB,KAAKyB,oBACvL,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAO2H,MAAQA,EAAQnC,gBAAkBjH,KAAKiH,kBAC9C,kBAAC,EAAD,CAAYvF,WAAaA,EAAa0F,qBAAuBpH,KAAKoH,qBAAuBtB,YAAc9F,KAAK8F,oB,SA3G7G8F,qBAkHJC,iBAAKP,G,gBC5GLQ,EAXH,WAAO,IAAD,EACgBzE,mBAAS,IADzB,mBACP0E,EADO,KACEC,EADF,KAGd,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAMtE,kBAAoBsE,IAC1B,kBAAC,IAAD,KAAeD,KCDPE,QACW,cAA7B/H,OAAOgI,SAASV,UAEe,UAA7BtH,OAAOgI,SAASV,UAEhBtH,OAAOgI,SAASV,SAASW,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAD,CAAUhI,MAAQA,GAChB,kBAAC,EAAD,OAEFvE,SAASwM,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvH,MAAK,SAAAwH,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.5a45f6ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nclass Country extends Component {\n    constructor(props, context) {\n        super(props, context);\n        \n        this.wrapperRef = React.createRef();\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.escFunction = this.escFunction.bind(this);\n        this.handleLike = this.handleLike.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n      }\n    \n    handleClickOutside(event) {\n        if (this.props.selected && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.props.handleBack();\n            this.props.history.push('/food-atlas/#home');\n        }\n    }\n\n    escFunction(event){\n        if(this.props.selected && event.keyCode === 27) {\n            this.props.handleBack();\n            this.props.history.push(\"/food-atlas/#home\");\n        }\n    }\n\n    checkFavourites(faves){\n        let found = false;\n        for(let i = 0; i < faves.length; i +=1){\n            if (faves[i].name === this.props.country){\n                found = true;\n                break;\n            }\n        }\n        return found;\n    }\n\n    handleLike(){\n        if(this.props.loggedIn){\n            this.props.dispatchLike(this.props.country);\n            setTimeout(() => {this.props.dispatchFavourites()}, 500);\n        }\n    }\n\n    render(){\n        const { country, dish, description, photo, recipe, handleBack, handlePhotoSource, selected, favourites, loggedIn } = this.props;\n\n        return (\n            <CSSTransition\n                classNames=\"transition\"\n                transitionappeartimeout={500}\n                timeout={500}\n                in={ selected }\n                unmountOnExit\n                appear\n                exit\n            >   \n                <div className=\"overlay\" id=\"country\">\n                    <div className=\"wrapper\" ref={this.setWrapperRef}>\n                    {\n                    country && !dish ? \n                        <article className=\"country noData\">\n                            <header className=\"countryHeader\">\n                                <div className=\"countryTitles\">\n                                    <h1 className=\"heading\">{ country }</h1>\n                                    <h2 className=\"subHeading\">It's a mystery to me...</h2>\n                                </div>\n                                <Link to=\"#home\" onClick={ handleBack }><span className=\"closeButton\"></span></Link>\n                            </header>\n                            <section className=\"countryBody\">\n                                <p className=\"text description\">There's currently no data on this place! If you have any suggestions, <span><a className=\"link\" href=\"mailto:oscarjwales@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">please get in touch</a></span>!</p>\n                            </section>\n                        </article>\n                    : !country ?\n                        <article className=\"country noData\">\n                            <header className=\"countryHeader\">\n                                <div className=\"countryTitles\">\n                                    <h2 className=\"subHeading\">Something went wrong :(</h2>\n                                </div>\n                                <Link to=\"#home\" onClick={ handleBack }><span className=\"closeButton\"></span></Link>\n                            </header>\n                        </article>\n                    :\n                        <article className=\"country\">\n                            <header className=\"countryHeader\">\n                                { loggedIn ?\n                                    this.checkFavourites(favourites) ?\n                                        <span className=\"heartOrange\" onClick={this.handleLike}></span>\n                                    :    \n                                        <span className=\"heart\" onClick={this.handleLike}></span>\n                                    :\n                                        null\n                                }\n                                <Link to=\"#home\" onClick={ handleBack }><span className=\"closeButton\"></span></Link>\n                                <div className=\"countryTitles\">\n                                    <h1 className=\"heading\">{ country }</h1>\n                                    <h2 className=\"subHeading\">{ dish }</h2>\n                                </div>\n                            </header>\n                            <section className=\"countryBody\">\n                                <figure className=\"photoContainer\">\n                                    <img className=\"photo\" src={ photo } alt={ `${ dish }, the national dish of ${ country }` } />\n                                    <figcaption className=\"caption\">Photo courtesy of { handlePhotoSource(photo) }</figcaption>\n                                </figure>\n                                <div className=\"description\">\n                                    <p className=\"text\">{ description }</p>\n                                    <a className=\"link underline\" href={ recipe }>Learn to cook it here!</a>\n                                </div>\n                            </section>\n                        </article>\n                    }\n                    </div>\n                </div>\n            </CSSTransition>\n        );\n    };\n};\n\nexport default withRouter(Country);","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: \"https://food-atlas.laikathespacedog.co.uk/api\",\n    headers: {\n        Accept: \"application/json\"\n    }\n});","export const logReg = ({token}) => {\n    return {\n        type: \"logReg\",\n        token: token\n    }\n}\n\nexport const loggedOut = () => {\n    return {\n        type: \"loggedOut\"\n    }\n}\n\nexport const liked = () => {\n    return {\n        type: \"liked\"\n    }\n}\n\nexport const favouriteCountries = (data) => {\n    return {\n        type: \"favourites\",\n        data: data\n    }\n}","const removeLayer = (arr) => {\n    let newArr = arr.data.map(country => country);\n    return newArr;\n}\n\nconst loggedIn = (state, { token }) => ({\n    ...state,\n    loggedIn: true,\n    token: token\n});\n\nconst loggedOut = (state) => ({\n    ...state,\n    loggedIn: false,\n    token: \"\",\n    favourites: []\n});\n\nconst liked = (state) => ({\n    ...state\n})\n\nconst faves = (state, {data}) => ({\n    ...state,\n    favourites: removeLayer(data)\n})\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"logReg\": return loggedIn(state, action);\n        case \"loggedOut\": return loggedOut(state);\n        case \"liked\": return liked(state);\n        case \"favourites\": return faves(state, action);\n        default: return state;\n    }\n}\n\nexport default reducer;","const initial = {\n    loggedIn: false,\n    token: \"\",\n    favourites: []\n};\n\nexport default initial;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./data/reducer\";\nimport initial from \"./data/initial\";\nimport thunk from \"redux-thunk\";\nimport persistState from \"redux-localstorage\";\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer, \n    initial,\n    composeEnhancers(\n        applyMiddleware(thunk),\n        persistState()\n    )\n);\n\nexport default store;","import axios from \"../../axios\";\nimport { logReg, loggedOut, liked, favouriteCountries } from \"./state\";\nimport store from \"../../store\";\n\naxios.interceptors.request.use(function (config) {\n    const token = store.getState().token;\n    config.headers.Authorization =  `Bearer ${token}`;\n\n    return config;\n});\n\nexport const login = (email, password) => {\n    return (dispatch) => {\n        axios.post(\"/login\", {\n            email: email,\n            password: password,\n            password_confirmation: password\n        }).then(({ data }) => {\n            dispatch(logReg(data));\n            axios.get(\"/me/countries\",{\n                headers: {\n                    'Authorization': `Bearer ${data.token}`\n                }\n            }).then(({ data }) => {\n                dispatch(favouriteCountries(data));\n            })\n        })\n    }\n}\n\nexport const reg = (name, email, password) => {\n    return (dispatch) => {\n        axios.post(\"/register\", {\n            name: name,\n            email: email,\n            password: password,\n            password_confirmation: password\n        }).then(({ data }) => {\n            dispatch(logReg(data));\n            axios.get(\"/me/countries\",{\n                headers: {\n                    'Authorization': `Bearer ${data.token}`\n                }\n            }).then(({ data }) => {\n                dispatch(favouriteCountries(data));\n            })\n        })\n    }\n}\n\nexport const logout = (token) => {\n    return (dispatch) => {\n        axios.post(\"/logout\", {\n            token: token,\n        }).then(({ data }) => {\n            dispatch(loggedOut(data));\n        })\n    }\n}\n\nexport const like = (country) => {\n    return (dispatch) => {\n        axios.post(\"/me/countries\", {\n            countries: [country]\n        }).then(({ data }) => {\n            dispatch(liked(data));\n        })\n    }\n}\n\nexport const favourites = () => {\n    return (dispatch) => {\n        axios.get(\"/me/countries\").then(({ data }) => {\n            dispatch(favouriteCountries(data));\n        });\n    }\n} ","import { connect } from \"react-redux\";\nimport Country from \"./Country\";\nimport { like, favourites } from \"../../data/actions/api\";\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.loggedIn,\n        favourites: state.favourites\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchLike: (country) => {\n        dispatch(like(country))\n    },\n    dispatchFavourites: () => dispatch(favourites())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Country);","import React, { Component } from 'react';\nimport geoUrl from \"../data/topo.json\";\nimport { withRouter, Link } from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nclass List extends Component {\n    \n    constructor(props, context) {\n        super(props, context);\n\n        this.wrapperRef = React.createRef();\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.escFunction = this.escFunction.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n      }\n    \n    handleClickOutside(event) {\n        if (this.props.list && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.props.history.push(\"/food-atlas/#home\");\n            this.props.handleListView();\n        }\n    }\n\n    escFunction(event){\n        if(this.props.list && event.keyCode === 27) {\n            this.props.history.push(\"/food-atlas/#home\");\n            this.props.handleListView();\n        }\n    }\n\n    render(){\n\n        const countries = geoUrl.objects.ne_50m_admin_0_countries.geometries;\n        const { handleEnter, handleListView, list } = this.props;\n\n        return (\n            <CSSTransition\n                classNames=\"transition\"\n                transitionappeartimeout={500}\n                timeout={5000}\n                in={ list }\n                unmountOnExit\n                appear\n            >   \n                <div className=\"overlay\" id=\"list\">      \n                    <div className=\"wrapper\" ref={this.setWrapperRef}>\n                        <aside className=\"list\">\n                            <Link className=\"close\" href=\"#home\" onClick={handleListView}><span className=\"closeButton\"></span></Link>\n                            <p className=\"asideHeading\">List</p>\n                            <div className=\"listContainer\">\n                                <ul className=\"countryList\">\n                                    { countries.sort((a, b) => (a.properties.NAME > b.properties.NAME) ? 1 : -1).map(geo =>\n                                        geo.properties.COUNTRY ?\n                                        <li className=\"listItem\" key={ `${geo.properties.ISO_A3}${geo.properties.name}` }><Link to=\"#country\" onClick={() => {\n                                            const { NAME, DISH, DESCRIPTION, PHOTO, RECIPE } = geo.properties;\n                                            handleEnter(NAME, DISH, DESCRIPTION, PHOTO, RECIPE);\n                                            handleListView();\n                                        }}>{ geo.properties.NAME }</Link></li>\n                                        : null\n                                    )}\n                                </ul>\n                            </div>\n                        </aside>\n                    </div>\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default withRouter(List);","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nclass About extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.wrapperRef = React.createRef();\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.escFunction = this.escFunction.bind(this);\n        this.listLink = this.listLink.bind(this);\n        this.loginLink = this.loginLink.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n      }\n    \n    handleClickOutside(event) {\n        if (this.props.about && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.props.history.push('/food-atlas/#home');\n            this.props.handleAboutView();\n        }\n    }\n\n    escFunction(event){\n        if(this.props.about && event.keyCode === 27) {\n            this.props.history.push(\"/food-atlas/#home\");\n            this.props.handleAboutView();\n        }\n    }\n\n    listLink(){\n        this.props.handleAboutView();\n        this.props.handleListView();\n    }\n\n    loginLink(){\n        this.props.handleAboutView();\n        this.props.handleLoginView();\n    }\n\n    render(){\n        const {handleAboutView, about, handleLoginView, handleListView} = this.props;\n\n        return (\n            <CSSTransition\n                classNames=\"transition\"\n                transitionappeartimeout={500}\n                timeout={500}\n                in={ about }\n                unmountOnExit\n                appear\n            >   \n                <div className=\"overlay\" id=\"about\">\n                    <div className=\"wrapper\" ref={this.setWrapperRef}>\n                        <aside className=\"about\">\n                            <Link to=\"#home\" onClick={handleAboutView}><span className=\"closeButton\"></span></Link>\n                            <div className=\"aboutText\">\n                                <p className=\"asideHeading\">Welcome!</p>\n                                <p className=\"asideText\">Explore the world of food by simply clicking on a country to find out about one of its signature national dishes.</p>\n                                <p className=\"asideText\"><span className=\"link\" onClick={this.loginLink}>Create an account</span> to make your own personalised list of dishes!</p>\n                                <p className=\"asideText\">Some small nations may be hard to locate on the map, so please find them on the <span className=\"link\" onClick={this.listLink}>list</span> instead if you are struggling.</p>\n                            </div>\n                        </aside>\n                    </div>\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default withRouter(About);","import React from 'react';\n\nconst Footer = () => {\n\n    return (\n        <footer className=\"footer\">\n            <h2 className=\"text\">Made by <a className=\"link\" href=\"https://github.com/LaikaTheSpaceDog\" target=\"_blank\" rel=\"noopener noreferrer\">LaikaTheSpaceDog</a></h2>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { useState } from 'react';\n\nconst Header = ({handleAboutView, handleListView, loggedIn, handleFavouritesView, dispatchFavourites}) => {\n\n    const [hovered, setHovered] = useState(false);\n    const hover = () => setHovered(true);\n    \n    let favouritesViewApi = () => {\n        dispatchFavourites();\n        handleFavouritesView();\n    }\n\n    return (\n        <header className=\"header\">\n            <div className=\"headContainer\" onMouseEnter={ hover }>\n                <h1 className=\"heading\">Food Atlas</h1>\n            </div>\n            <nav className={ !hovered ? \"hidden\" : \"dropdown-content\" }>\n                <ul>\n                    <li><a className=\"subHeading headButton\" href=\"#about\" onClick={ handleAboutView }>About</a></li>\n                    <li><a className=\"subHeading headButton\" href=\"#list\" onClick={ handleListView }>Countries</a></li>\n                    {!loggedIn ? null :\n                        <li><a className=\"subHeading headButton\" href=\"#favourites\" onClick={ favouritesViewApi }>Favourites</a></li>          \n                    }\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default Header;","import { connect } from \"react-redux\";\nimport Header from \"./Header\";\nimport { favourites } from \"../../data/actions/api\";\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.loggedIn,\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchFavourites: () => dispatch(favourites())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport geoUrl from \"../data/topo.json\";\nimport { Link } from 'react-router-dom';\n\nconst Map = ({setTooltipContent, handleEnter}) => {\n\n    return (\n        <div className=\"container\">\n            <ComposableMap width={1200} style={{ width: \"100%\" }} data-tip=\"\" projectionConfig={{ scale: 200 }} >\n                <ZoomableGroup>\n                    <Geographies geography={geoUrl}>\n                        {({ geographies }) =>\n                            geographies.map(geo =>\n                                <Link to=\"/food-atlas/#country\" key={ geo.properties.NAME }>\n                                    <Geography \n                                        key={geo.rsmKey} \n                                        geography={geo}\n                                        onMouseOver={() => {\n                                            const { NAME } = geo.properties;\n                                            setTooltipContent(`${NAME}`);\n                                        }}\n                                        onMouseOut={() => {\n                                            setTooltipContent(\"\");\n                                        }}\n                                        onClick={() => {\n                                            const { NAME, DISH, DESCRIPTION, PHOTO, RECIPE } = geo.properties;\n                                            handleEnter(NAME, DISH, DESCRIPTION, PHOTO, RECIPE);\n                                            setTooltipContent(\"\");\n                                        }}\n                                        fill=\"#44BBA4\"\n                                        stroke=\"#E94F37\"\n                                        strokeWidth=\"0.5\"\n                                        style={{\n                                            default: {\n                                                outline: 'none'\n                                            },\n                                            hover: {\n                                                fill: \"#E94F37\",\n                                                outline: 'none'\n                                            },\n                                            pressed: {\n                                                outline: 'none'\n                                            },\n                                            cursor:'pointer'\n                                        }}\n                                    />\n                                </Link>\n                            )\n                        }\n                    </Geographies>\n                </ZoomableGroup>\n            </ComposableMap>\n        </div>\n    );\n}\n\nexport default Map;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nclass Login extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            reg: true,\n            register: {\n                name: \"\",\n                email: \"\",\n                pass: \"\",\n                conf: \"\"\n            },\n            log: false,\n            login: {\n                email: \"\",\n                pass: \"\"\n            }\n        }\n\n        this.wrapperRef = React.createRef();\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.escFunction = this.escFunction.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleRegName = this.handleRegName.bind(this);\n        this.handleRegEmail = this.handleRegEmail.bind(this);\n        this.handleRegPass = this.handleRegPass.bind(this);\n        this.handleRegConf = this.handleRegConf.bind(this);\n        this.handleLogEmail = this.handleLogEmail.bind(this);\n        this.handleLogPass = this.handleLogPass.bind(this);\n        this.handleLoginApi = this.handleLoginApi.bind(this);\n        this.handleRegisterApi = this.handleRegisterApi.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        document.addEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n      }\n    \n    handleClickOutside(event) {\n        if (this.props.login && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.props.history.push('/food-atlas/#home');\n            this.props.handleLoginView();\n        }\n    }\n\n    escFunction(event){\n        if(this.props.login && event.keyCode === 27) {\n            this.props.history.push(\"/food-atlas/#home\");\n            this.props.handleLoginView();\n        }\n    }\n\n    handleClick(){\n        let currentReg = this.state.reg;\n        let currentLog = this.state.log;\n        this.setState({\n            reg: !currentReg,\n            log: !currentLog\n        })\n    }\n\n    handleRegName(e){\n        let registerCopy = JSON.parse(JSON.stringify(this.state.register));\n        registerCopy.name = e.currentTarget.value;\n        this.setState({ \n            register: registerCopy\n        });\n    }\n\n    handleRegEmail(e){\n        let registerCopy = JSON.parse(JSON.stringify(this.state.register));\n        registerCopy.email = e.currentTarget.value;\n        this.setState({ \n            register: registerCopy\n        });\n    }\n\n    handleRegPass(e){\n        let registerCopy = JSON.parse(JSON.stringify(this.state.register));\n        registerCopy.pass = e.currentTarget.value;\n        this.setState({ \n            register: registerCopy\n        });\n    }\n\n    handleRegConf(e){\n        let registerCopy = JSON.parse(JSON.stringify(this.state.register));\n        registerCopy.conf = e.currentTarget.value;\n        this.setState({ \n            register: registerCopy\n        });\n    }\n\n    handleLogEmail(e){\n        let loginCopy = JSON.parse(JSON.stringify(this.state.login));\n        loginCopy.email = e.currentTarget.value;\n        this.setState({ \n            login: loginCopy\n        });\n    }\n\n    handleLogPass(e){\n        let loginCopy = JSON.parse(JSON.stringify(this.state.login));\n        loginCopy.pass = e.currentTarget.value;\n        this.setState({ \n            login: loginCopy\n        });\n    }\n\n    handleRegisterApi(e){\n        e.preventDefault();\n        let {name, email, pass, conf} = this.state.register;\n        if( pass === conf ){\n            this.props.dispatchReg(name, email, pass)\n            this.props.handleLogin();\n        } else { \n           return \"Passwords must match\" \n        }\n    }\n    \n    handleLoginApi(e){\n        e.preventDefault();\n        let {email, pass} = this.state.login;\n        this.props.dispatchLog(email, pass);\n        this.props.handleLoginView();\n    }\n\n    handleLogout(){\n        this.props.dispatchLogout(this.props.token);\n    }\n\n    render(){\n\n        const { reg, log } = this.state;\n        const { loggedIn, handleLoginView } = this.props;\n\n        return (\n            <>\n                { loggedIn ? \n                    <aside className=\"loggedIn\">\n                        <a className=\"loginLink\" href=\"#logout\" onClick={ this.handleLogout }>Log Out</a>\n                    </aside>\n                :\n                    <aside className=\"loggedIn\">\n                        <a className=\"loginLink\" href=\"#login\" onClick={ handleLoginView }>Register/Log In</a>         \n                    </aside>\n                }\n                <CSSTransition\n                    classNames=\"transition\"\n                    transitionappeartimeout={500}\n                    timeout={500}\n                    in={ this.props.login }\n                    unmountOnExit\n                    appear\n                >   \n                    <div className=\"overlay\" id=\"login\">\n                        <div className=\"wrapper\" ref={this.setWrapperRef}>\n                            <aside className=\"logReg\">\n                                <ul className=\"tabGroup\">\n                                    <li className={`tab${reg ? \" active\" : \"\"}`} onClick={this.handleClick}>Register</li>\n                                    <li className={`tab${log ? \" active\" : \"\"}`} onClick={this.handleClick}>Login</li>\n                                </ul>\n                                {reg ?\n                                    <form className=\"form\" id=\"register\" onSubmit={ this.handleRegisterApi }>\n                                        <label className=\"label\">Full Name</label>\n                                        <input className=\"input\" type=\"text\" onChange={ this.handleRegName } value={ this.state.register.name } required/>\n\n                                        <label className=\"label\">Email</label>\n                                        <input className=\"input\" type=\"email\" onChange={ this.handleRegEmail } value={ this.state.register.email } required/>\n\n                                        <label className=\"label\">Password</label>\n                                        <input className=\"input\" type=\"password\" onChange={ this.handleRegPass } value={ this.state.register.pass } required/>\n\n                                        <label className=\"label\">Password Confirmation</label>\n                                        <input className=\"input\" type=\"password\" onChange={ this.handleRegConf } value={ this.state.register.conf } required/>\n\n                                        <button className=\"formButton\" type=\"submit\">Register</button>\n                                    </form>\n                                :\n                                    <form className=\"form\" id=\"login\" onSubmit={ this.handleLoginApi }>\n                                        <label className=\"label\">Email</label>\n                                        <input className=\"input\" type=\"email\" onChange={ this.handleLogEmail } value={ this.state.login.email } required/>\n\n                                        <label className=\"label\">Password</label>\n                                        <input className=\"input\" type=\"password\" onChange={ this.handleLogPass } value={ this.state.login.pass } required/>\n\n                                        <button className=\"formButton\" type=\"submit\">Login</button>\n                                    </form>\n                                }\n                            </aside>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </>\n        );\n    }\n}\n\nexport default withRouter(Login);","import { connect } from \"react-redux\";\nimport Login from \"./Login\";\nimport { login, reg, logout } from \"../../data/actions/api\";\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.loggedIn,\n        token: state.token\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchLog: (email, password) => {\n        dispatch(login(email, password))\n    },\n    dispatchReg: (name, email, password) => {\n        dispatch(reg(name, email, password))\n    },\n    dispatchLogout: (token) => {\n        dispatch(logout(token))\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps )(Login);","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { CSSTransition } from \"react-transition-group\";\n\nclass Favourites extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n\n        this.wrapperRef = React.createRef();\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.escFunction = this.escFunction.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        document.addEventListener(\"keydown\", this.escFunction, false);\n        if (this.props.loggedIn){\n            this.props.dispatchFavourites()\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n        document.removeEventListener(\"keydown\", this.escFunction, false);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n      }\n    \n    handleClickOutside(event) {\n        if (this.props.favourites && this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.props.history.push('/food-atlas/#home');\n            this.props.handleFavouritesView();\n        }\n    }\n\n    escFunction(event){\n        if(this.props.favourites && event.keyCode === 27) {\n            this.props.history.push(\"/food-atlas/#home\");\n            this.props.handleFavouritesView();\n        }\n    }\n\n    render(){\n        const {handleFavouritesView, favourites, favouriteCountries, handleEnter} = this.props;\n\n        return (\n            <CSSTransition\n                classNames=\"transition\"\n                transitionappeartimeout={500}\n                timeout={500}\n                in={ favourites }\n                unmountOnExit\n                appear\n            >   \n                <div className=\"overlay\" id=\"favourites\">\n                    <div className=\"wrapper\" ref={this.setWrapperRef}>\n                        <aside className=\"favourites\">\n                            <Link to=\"#favourites\" onClick={handleFavouritesView}><span className=\"closeButton\"></span></Link>\n                            <p className=\"asideHeading\">Favourites</p>\n                            <div className=\"listContainer\">\n                                <ul className=\"favouriteList\">\n                                    {favouriteCountries.sort((a, b) => (a.name > b.name) ? 1 : -1).map(function(country, i) {\n                                        return <li className=\"listItem\"><Link to=\"/food-atlas/#country\" key={i} onClick={() => {\n                                            const { name, dish, description, photo, recipe } = country;\n                                            handleEnter(name, dish, description, photo, recipe);\n                                            handleFavouritesView();\n                                        }}>{`${country.name}: ${country.dish} `}</Link></li>\n                                    })}\n                                </ul>\n                            </div>\n                        </aside>\n                    </div>\n                </div>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default withRouter(Favourites);","import { connect } from \"react-redux\";\nimport Favourites from \"./Favourites\";\nimport { favourites } from \"../../data/actions/api\";\n\nconst mapStateToProps = state => {\n    return {\n        favouriteCountries: state.favourites,\n        loggedIn: state.loggedIn\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    dispatchFavourites: () => dispatch(favourites())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favourites);","import React, { memo } from 'react';\nimport Country from './Country/';\nimport List from './List';\nimport About from './About';\nimport Footer from './Footer';\nimport Header from './Header/';\nimport Map from './Map';\nimport Login from './Login/';\nimport Favourites from './Favourites/';\nimport { CSSTransition } from \"react-transition-group\";\nimport { PersistentComponent } from 'react-persistent-state';\n\nclass Home extends PersistentComponent { \n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            country: \"\",\n            dish: \"\",\n            description: \"\",\n            photo: \"\",\n            recipe: \"\",\n            selected: false,\n            about: false,\n            list: false,\n            login: false,\n            favourites: false,\n            cssTrans: true\n        }\n\n        this.handleBack = this.handleBack.bind(this);\n        this.handleEnter = this.handleEnter.bind(this);\n        this.handleAboutView = this.handleAboutView.bind(this);\n        this.handleListView = this.handleListView.bind(this);\n        this.handleLoginView = this.handleLoginView.bind(this);\n        this.handleFavouritesView = this.handleFavouritesView.bind(this);\n    }\n\n    handleEnter(country, dish, description, photo, recipe){\n        this.setState({\n            country: country,\n            dish: dish,\n            description: description,\n            photo: photo,\n            recipe: recipe,\n            selected: true\n        })\n    }\n\n    handleBack(){\n        this.setState({\n            selected: false\n        });\n        setTimeout(() => {\n            this.setState({\n                country: \"\",\n                dish: \"\",\n                description: \"\",\n                photo: \"\",\n                recipe: \"\"\n            }) \n        }, 500);\n    }\n\n    handlePhotoSource = (photo) => {\n        const url = new URL(photo);\n        return url.hostname;\n    }\n\n    handleAboutView(){\n        let current = this.state.about;\n        this.setState({\n            about: !current\n        })\n    }\n\n    handleListView(){\n        let current = this.state.list;\n        this.setState({\n            list: !current\n        })\n    }\n\n    handleLoginView(){\n        let current = this.state.login;\n        this.setState({\n            login: !current\n        })\n    }\n\n    handleFavouritesView(){\n        let current = this.state.favourites;\n        this.setState({\n            favourites: !current\n        })\n    }\n    \n    render(){ \n    \n        const { country, dish, description, photo, recipe, selected, about, list, cssTrans, login, favourites } = this.state;\n\n        return(\n            <CSSTransition\n                classNames=\"transition\"\n                transitionAppearTimeout={500}\n                timeout={500}\n                in={ cssTrans }\n                unmountOnExit\n                appear\n            >         \n                <section className=\"home\" id=\"home\">\n                    <Header handleAboutView={this.handleAboutView} handleListView={this.handleListView} handleFavouritesView={this.handleFavouritesView} />\n                    <Map setTooltipContent={this.props.setTooltipContent} handleEnter={this.handleEnter} />\n                    <About handleAboutView={ this.handleAboutView } about={about} handleListView={this.handleListView} handleLoginView={ this.handleLoginView } />\n                    <List handleEnter={ this.handleEnter } handleListView={ this.handleListView } list={list} />\n                    <Country selected={ selected } country={ country } dish={ dish } description={ description } photo={ photo } recipe={ recipe } handleBack={ this.handleBack } handlePhotoSource={ this.handlePhotoSource } />\n                    <Footer />\n                    <Login login={ login } handleLoginView={ this.handleLoginView } />\n                    <Favourites favourites={ favourites } handleFavouritesView={ this.handleFavouritesView } handleEnter={ this.handleEnter }/>\n                </section>\n            </CSSTransition>\n        );\n    }\n}\n\nexport default memo(Home);\n","import React, {useState} from 'react';\nimport Home from './components/Home';\nimport \"./styles/css/styles.min.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\n\n\nconst App = () => {\n    const [content, setContent] = useState(\"\");\n\n    return (\n        <Router>\n            <Home setTooltipContent={ setContent } />\n            <ReactTooltip>{content}</ReactTooltip>\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}